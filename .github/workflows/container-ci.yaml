name: CI with container

on:
  pull_request:
    branches: main

env:
  DOCKER_IMAGE_NAME: 'zackchiang/cicd-pipeline-nodejs'
  DOCKER_IMAGE_VERSION: '1.0'
  CONTAINER_NAME: 'ci-container'

jobs:
  lint-check:
    runs-on: ubuntu-latest
    steps:
        - name: checkout-repository
          uses: actions/checkout@v4
        
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
    
        - name: Cache Docker layers
          uses: actions/cache@v4
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-
            
        - name: Build Docker image
          uses: docker/build-push-action@v6
          with:
            context: .
            push: false
            tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}
            cache-from: type=gha
            cache-to: type=gha,mode=max

        - name: Start Docker container
          run: |
            docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }} \
            sh -c 'npm ci'

        - name: Lint check inside Docker container
          run: |
            docker exec ${{ env.CONTAINER_NAME }} \
            ./node_modules/.bin/eslint .

        - name: Prettier check inside Docker container
          run: |
            docker exec ${{ env.CONTAINER_NAME }} \
            ./node_modules/.bin/prettier --write .

        - name: Stop and remove Docker container
          run: |
            docker stop ${{ env.CONTAINER_NAME }} \
            && docker rm ${{ env.CONTAINER_NAME }}
        
  mocha-test:
    runs-on: ubuntu-latest
    needs: lint-check
    steps:
        - name: checkout-repository
          uses: actions/checkout@v4
        
        - name: check pwd
          run: echo "pwd is $(pwd)"
      
        - name: Run Mocha tests and generate reports inside Docker container
          run: |
            docker run --rm \
            -v $(pwd)/mochawesome-report:/home/node/app/mochawesome-report \
            -v $(pwd)/coverage:/home/node/app/coverage \
            --user root \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }} \
            sh -c './node_modules/.bin/nyc --reporter=html ./node_modules/.bin/mocha --reporter mochawesome'
    
        - name: Upload Mochawesome report
          uses: actions/upload-artifact@v4
          if: ${{ always() }}
          with:
            name: mochawesome-report
            path: ./mochawesome-report

        - name: Upload code coverage report
          uses: actions/upload-artifact@v4
          if: ${{ always() }}
          with:
            name: code-coverage-report
            path: ./coverage
    
  notify-discord:
    runs-on: ubuntu-latest
    needs: mocha-test
    if: failure()
    steps:
      - name: Send Discord message on failure
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          LINK: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        run: |
          curl -X POST -H "Content-Type: application/json" -d "{\"content\": \"Workflow ${{ github.workflow }} failed in job ${{ github.job }}. Check the reports [here]($LINK).\"}" $DISCORD_WEBHOOK_URL