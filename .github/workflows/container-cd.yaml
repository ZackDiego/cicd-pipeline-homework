# 指定 Actions 的名稱，會顯示在 Actions 頁面上
name: Deploy on EC2 with Docker Image

# 指定觸發的事件(trigger event)，這裡是 push 到 main 分支時觸發
on:
  pull_request:
    branches: main
    types: closed

env:
  DOCKER_IMAGE_NAME: 'zackchiang/cicd-pipeline-nodejs'
  DOCKER_IMAGE_VERSION: '1.0'
  CONTAINER_NAME: 'cd-container'
  APP_PORT: '3000'

# 指定工作流程(jobs)
# 每個 actions 至少要有一個 job
jobs:
  build-and-upload-image:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
          
      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    
  run-container-ec2:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build-and-upload-image
    steps:
      - name: Stop and remove the container on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            if [ $(docker ps -q -f name=${{ env.CONTAINER_NAME }}) ]; then
              docker stop ${{ env.CONTAINER_NAME }}
              docker rm ${{ env.CONTAINER_NAME }}
            fi

      - name: Pull the latest Docker image on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            docker pull ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}

      - name: Start the container on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            docker run -d \
            -v /path/to/your/app/mochawesome-report:/home/node/app/mochawesome-report \
            -v /path/to/your/app/coverage:/home/node/app/coverage \
            -p ${{ env.APP_PORT }}:3000 \
            --name ${{ env.CONTAINER_NAME }} \
            ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}